
SET(ALL_KNOWN_FUNCTIONALITY_NAMES ${MITK_FUNCTIONALITY_NAMES_KNOWN} ${MBIQM_FUNCTIONALITY_NAMES_KNOWN} ${MBISB_FUNCTIONALITY_NAMES_KNOWN})
FOREACH(FUNC_NAME ${ALL_KNOWN_FUNCTIONALITY_NAMES})
  # first check if name is known, otherwise the name is maybe left from before and
  # the functionality doesn't exist anymore, e.g. because the build system was 
  # modified.
  IF(BUILD_${FUNC_NAME} OR BUILD_ALL_FUNCTIONALITIES)
    MESSAGE(STATUS "Adding ${FUNC_NAME} to MainApp")
    SET(FUNC_LIBRARIES ${FUNC_LIBRARIES} ${FUNC_NAME})
    SET(REGISTER_FUNCTIONALITY_DEFINITIONS "${REGISTER_FUNCTIONALITY_DEFINITIONS} 
      bool Register${FUNC_NAME}();"
    )
    SET(REGISTER_FUNCTIONALITY_CALLS "${REGISTER_FUNCTIONALITY_CALLS} 
      Register${FUNC_NAME}();"
    )
      # ELSE(ALL_KNOWN_FUNCTIONALITY_NAMES MATCHES ${FUNC_NAME})
      # MESSAGE(STATUS "WARNING: ${FUNC_NAME} has disappeared!")
      # REMOVE_FROM_CACHE_LIST(MITK_FUNCTIONALITY_NAMES ${FUNC_NAME})
      # REMOVE_FROM_CACHE_LIST(MBIQM_FUNCTIONALITY_NAMES ${FUNC_NAME})
      # REMOVE_FROM_CACHE_LIST(MBISB_FUNCTIONALITY_NAMES ${FUNC_NAME})
  ENDIF(BUILD_${FUNC_NAME} OR BUILD_ALL_FUNCTIONALITIES)
ENDFOREACH(FUNC_NAME)

# now check for "internal" functionalities and register
# the right factory _before_ the functionalities
IF(BUILD_ALL_FUNCTIONALITIES)
  # now we have to find out what kind of project we are
  IF(MBISB_FUNCTIONALITY_NAMES_KNOWN) 
    SET(FACTORY_CLASS "SBCoreObjectFactory")
  ELSE(MBISB_FUNCTIONALITY_NAMES_KNOWN) 
    IF(MBIQM_FUNCTIONALITY_NAMES_KNOWN) 
      SET(FACTORY_CLASS "QMCoreObjectFactory")
    ENDIF(MBIQM_FUNCTIONALITY_NAMES_KNOWN) 
  ENDIF(MBISB_FUNCTIONALITY_NAMES_KNOWN) 
ELSE(BUILD_ALL_FUNCTIONALITIES)  
  # find out which main dir has an enabled functionality
  SET(MBISB_IS_ON FALSE)
  FOREACH(FUNC_NAME ${MBISB_FUNCTIONALITY_NAMES_KNOWN})
    IF(BUILD_${FUNC_NAME})
       SET(MBISB_IS_ON TRUE)
    ENDIF(BUILD_${FUNC_NAME})
  ENDFOREACH(FUNC_NAME)
  IF(MBISB_IS_ON)
    SET(FACTORY_CLASS "SBCoreObjectFactory")
  ELSE(MBISB_IS_ON)
    SET(MBIQM_IS_ON FALSE)
    FOREACH(FUNC_NAME ${MBIQM_FUNCTIONALITY_NAMES_KNOWN})
      IF(BUILD_${FUNC_NAME})
       SET(MBIQM_IS_ON TRUE)
      ENDIF(BUILD_${FUNC_NAME})
    ENDFOREACH(FUNC_NAME)
    IF(MBIQM_IS_ON)
        SET(FACTORY_CLASS "QMCoreObjectFactory")
    ELSE(MBIQM_IS_ON)
        SET(FACTORY_CLASS "")
    ENDIF(MBIQM_IS_ON)
  ENDIF(MBISB_IS_ON)
ENDIF(BUILD_ALL_FUNCTIONALITIES)  
   

IF(FACTORY_CLASS)
  SET(REGISTER_FUNCTIONALITY_DEFINITIONS "void Register${FACTORY_CLASS}();
    ${REGISTER_FUNCTIONALITY_DEFINITIONS} 
    "
  )
  SET(REGISTER_FUNCTIONALITY_CALLS "Register${FACTORY_CLASS}();
     ${REGISTER_FUNCTIONALITY_CALLS} 
    "
  )
ENDIF(FACTORY_CLASS)

CONFIGURE_FILE(RegisterFunctionalityCalls.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/RegisterFunctionalityCalls.cpp @ONLY)
# CONFIGURE_FILE(RegisterFunctionalityCalls.h.in RegisterFunctionalityCalls.h @ONLY)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
SET(REGISTER_FUNCTIONALITY_CALLS_CPP ${CMAKE_CURRENT_BINARY_DIR}/RegisterFunctionalityCalls.cpp)
SET(MAIN_APP_CPP SampleApp.cpp SampleAppMain.cpp ${REGISTER_FUNCTIONALITY_CALLS_CPP})
QT_WRAP_CPP(MainApp MAIN_APP_CPP SampleApp.h)

ADD_EXECUTABLE(MainApp ${MAIN_APP_CPP})
TARGET_LINK_LIBRARIES(MainApp Qmitk ${FUNC_LIBRARIES}) 

# tests without data
IF(MITK_APPLICATION_TESTING)
  ADD_TEST(MainAppWithoutData ${EXECUTABLE_OUTPUT_PATH}/MainApp -testing)
  ADD_TEST(MainApp_EmptyImage ${EXECUTABLE_OUTPUT_PATH}/MainApp -testdata -testing)
ENDIF(MITK_APPLICATION_TESTING)
IF(MITK_FUNCTIONALITY_TESTING)
  FOREACH(FUNC_NAME ${FUNC_LIBRARIES})
    ADD_TEST(${FUNC_NAME}_WithoutData ${EXECUTABLE_OUTPUT_PATH}/MainApp -testing ${FUNC_NAME})
    ADD_TEST(${FUNC_NAME}_EmptyImage ${EXECUTABLE_OUTPUT_PATH}/MainApp -testdata -testing ${FUNC_NAME})
  ENDFOREACH(FUNC_NAME)
ENDIF(MITK_FUNCTIONALITY_TESTING)

# now test with all data files found
FILE(GLOB testdatalist ${MITK_SOURCE_DIR}/Testing/Data/*.*)
LIST(REMOVE_ITEM testdatalist "${MITK_SOURCE_DIR}/Testing/Data/.svn")
FOREACH(testdataitem ${testdatalist})

  GET_FILENAME_COMPONENT(testdataname ${testdataitem} NAME)

  IF(MITK_FUNCTIONALITY_TESTING)
    FOREACH(FUNC_NAME ${FUNC_LIBRARIES})
    ADD_TEST(${FUNC_NAME}_${testdataname} ${EXECUTABLE_OUTPUT_PATH}/MainApp ${testdataitem} -testing ${FUNC_NAME})
    ENDFOREACH(FUNC_NAME)
  ENDIF(MITK_FUNCTIONALITY_TESTING)

  IF(MITK_APPLICATION_TESTING)
    ADD_TEST(MainApp_${testdataname} ${EXECUTABLE_OUTPUT_PATH}/MainApp ${testdataitem} -testing)
  ENDIF(MITK_APPLICATION_TESTING)

ENDFOREACH(testdataitem)

IF(MITK_CHILI_PLUGIN)
   ADD_SUBDIRECTORY(ChiliPlugin)
ENDIF(MITK_CHILI_PLUGIN)


