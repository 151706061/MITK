# import the value of VARNAME from DIR to current CMakeLists.txt
# todo: check if variable exists
MACRO(IMPORT_VARIABLES IMPORTDIR)
GET_FILENAME_COMPONENT(ABSOLUTE_DIR ${IMPORTDIR} ABSOLUTE)
FOREACH(IMPORTVAR ${ARGN})
  GET_DIRECTORY_PROPERTY(${IMPORTVAR} 
    DIRECTORY ${ABSOLUTE_DIR}
    DEFINITION ${IMPORTVAR}
  )
ENDFOREACH(IMPORTVAR)
ENDMACRO(IMPORT_VARIABLES)
SET(ALL_FUNCTIONALITY_NAMES ${${KITNAME}FUNCTIONALITY_NAMES} ${MITKQMFUNCTIONALITY_NAMES} ${MBISBFUNCTIONALITY_NAMES})
SET(ALL_KNOWN_FUNCTIONALITY_NAMES ${${KITNAME}FUNCTIONALITY_NAMES_KNOWN} ${MITKQMFUNCTIONALITY_NAMES_KNOWN} ${MBISBFUNCTIONALITY_NAMES_KNOWN})
FOREACH(FUNC_NAME ${ALL_FUNCTIONALITY_NAMES})
# first check if name is known, otherwise the name is maybe left from before and
# the functionality doesn't exist anymore, e.g. because the build system was 
# modified.
IF(ALL_KNOWN_FUNCTIONALITY_NAMES MATCHES ${FUNC_NAME})
MESSAGE(STATUS "Adding ${FUNC_NAME} to MainApp")
SET(FUNC_LIBRARIES ${FUNC_LIBRARIES} ${FUNC_NAME})
SET(REGISTER_FUNCTIONALITY_DEFINITIONS "${REGISTER_FUNCTIONALITY_DEFINITIONS} 
  bool Register${FUNC_NAME}();"
)
SET(REGISTER_FUNCTIONALITY_CALLS "${REGISTER_FUNCTIONALITY_CALLS} 
  Register${FUNC_NAME}();"
)
ELSE(ALL_KNOWN_FUNCTIONALITY_NAMES MATCHES ${FUNC_NAME})
  MESSAGE(STATUS "WARNING: ${FUNC_NAME} has disappeared!")
  LIST(REMOVE_ITEM ALL_FUNCTIONALITY_NAMES ${FUNC_NAME})
ENDIF(ALL_KNOWN_FUNCTIONALITY_NAMES MATCHES ${FUNC_NAME})
ENDFOREACH(FUNC_NAME)
CONFIGURE_FILE(RegisterFunctionalityCalls.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/RegisterFunctionalityCalls.cpp @ONLY)
# CONFIGURE_FILE(RegisterFunctionalityCalls.h.in RegisterFunctionalityCalls.h @ONLY)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
SET(MAIN_APP_CPP SampleApp.cpp SampleAppMain.cpp ${CMAKE_CURRENT_BINARY_DIR}/RegisterFunctionalityCalls.cpp)
QT_WRAP_CPP(MainApp MAIN_APP_CPP SampleApp.h)

ADD_EXECUTABLE(MainApp ${MAIN_APP_CPP})
TARGET_LINK_LIBRARIES(MainApp Qmitk ${FUNC_LIBRARIES}) 
ADD_TEST(MainAppWithoutData ${EXECUTABLE_OUTPUT_PATH}/MainApp -testing)
