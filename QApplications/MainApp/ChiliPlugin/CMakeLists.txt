OPTION(MITK_CHILI_PLUGIN "Build MITK for use as a CHILI plugin" OFF)
IF(MITK_CHILI_PLUGIN)
  FIND_PATH(MITK_CHILI_PLUGIN_SDK include/chili/plugin.h
            PATHS ENV CHILI
  )
  IF(MITK_CHILI_PLUGIN_SDK)
    SET(MITK_CHILI_PLUGIN_SDK_IPPIC_H ${MITK_CHILI_PLUGIN_SDK}/include/ipPic/ipPic.h)
    SET(MITK_CHILI_PLUGIN_SDK_IPTYPES_H ${MITK_CHILI_PLUGIN_SDK}/include/ipPic/ipTypes.h)
    IF(NOT EXISTS ${MITK_CHILI_PLUGIN_SDK_IPPIC_H})
       MESSAGE(SEND_ERROR "ipPic.h of sdk not found. Looked for ${MITK_CHILI_PLUGIN_SDK_IPPIC_H}")
    ENDIF(NOT EXISTS ${MITK_CHILI_PLUGIN_SDK_IPPIC_H})
  ENDIF(MITK_CHILI_PLUGIN_SDK)
  FIND_LIBRARY(CHILI_IPPIC_LIB ipPic ${MITK_CHILI_PLUGIN_SDK}/lib)
  FIND_LIBRARY(CHILI_IPFUNC_LIB ipFunc ${MITK_CHILI_PLUGIN_SDK}/lib)
  MARK_AS_ADVANCED(CHILI_IPFUNC_LIB CHILI_IPPIC_LIB)
  IF(WIN32) 
    FIND_LIBRARY(CHILI_LIB chili ${MITK_CHILI_PLUGIN_SDK}/lib)
    MARK_AS_ADVANCED(CHILI_LIB)
    SET(CHILI_ZLIB_H ${MITK_CHILI_PLUGIN_SDK}/include/zlib/zlib.h)
    CONFIGURE_FILE(${MITK_SOURCE_DIR}/zlib.h.in ${MITK_BINARY_DIR}/zlib.h)
  ENDIF(WIN32)

  INCLUDE(files.cmake)
  ADD_DEFINITIONS(-DNO_pVersion -DNOX)
  IF(WIN32)
  ADD_DEFINITIONS(-D_WINDOWS -D_WIN32 -DWIN32)
  ENDIF(WIN32)
  

  SET(MITK_CHILI_PLUGIN_NAME QcMITKPlugin)

  INCLUDE_DIRECTORIES(BEFORE . .. mitkConference ${MITK_CHILI_PLUGIN_SDK}/include )
  LINK_DIRECTORIES(${MITK_CHILI_PLUGIN_SDK}/lib)
  QT_WRAP_CPP(${MITK_CHILI_PLUGIN_NAME} CPP_FILES ${MOC_H_FILES} ../SampleApp.h)
  # QT_WRAP_CPP(${MITK_CHILI_PLUGIN_NAME} CPP_FILES ${MOC_H_FILES} ../SampleApp.h ${MITK_CHILI_PLUGIN_SDK}/include/chili/plugin.h)
  ADD_LIBRARY(${MITK_CHILI_PLUGIN_NAME} SHARED ${CPP_FILES} ${REGISTER_FUNCTIONALITY_CALLS_CPP} ../SampleApp.cpp)

  IF(MSVC_IDE OR MSVC_VERSION)
    SET_TARGET_PROPERTIES(${MITK_CHILI_PLUGIN_NAME} PROPERTIES LINK_FLAGS_DEBUG "/nodefaultlib:msvcrt")
  ENDIF(MSVC_IDE OR MSVC_VERSION)
 

  # chili 3.4 needs a workaround for incomplete dicom lib in the chili windows sdk
  IF(EXISTS ${MITK_CHILI_PLUGIN_SDK}/../bin)
    MESSAGE(STATUS "Using CHILI 3.4 SDK, enabling workaround")
    SET(CHILI_SDK_34_WORKAROUND TRUE)
  ENDIF(EXISTS ${MITK_CHILI_PLUGIN_SDK}/../bin)
  IF(CHILI_SDK_34_WORKAROUND AND WIN32)
    FIND_LIBRARY(IPDICOM_LIB libipDicom c:/opt/windows/mbi/lib)
  ELSE(CHILI_SDK_34_WORKAROUND AND WIN32)
    FIND_LIBRARY(IPDICOM_LIB ipDicom ${MITK_CHILI_PLUGIN_SDK}/lib)
  ENDIF(CHILI_SDK_34_WORKAROUND AND WIN32)
  MARK_AS_ADVANCED(IPDICOM_LIB)
  TARGET_LINK_LIBRARIES(${MITK_CHILI_PLUGIN_NAME} ${IPDICOM_LIB} ${FUNC_LIBRARIES} tinyxml Qmitk) 
  IF(WIN32)
  TARGET_LINK_LIBRARIES(${MITK_CHILI_PLUGIN_NAME} z chili ipMsgQT ipUtil jpeg lwf_jp2)
  ENDIF(WIN32)

ENDIF(MITK_CHILI_PLUGIN)
