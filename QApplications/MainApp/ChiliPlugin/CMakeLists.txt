INCLUDE(files.cmake)
ADD_DEFINITIONS(-DNO_pVersion -DNOX)
IF(WIN32)
ADD_DEFINITIONS(-D_WINDOWS -D_WIN32 -DWIN32)
ENDIF(WIN32)
SET(MITK_CHILI_PLUGIN_NAME QcMITKPlugin)

INCLUDE_DIRECTORIES(BEFORE . .. mitkConference ${MITK_CHILI_PLUGIN_SDK}/include )
LINK_DIRECTORIES(${MITK_CHILI_PLUGIN_SDK}/lib)
QT_WRAP_CPP(${MITK_CHILI_PLUGIN_NAME} CPP_FILES ${MOC_H_FILES} ../SampleApp.h)
# QT_WRAP_CPP(${MITK_CHILI_PLUGIN_NAME} CPP_FILES ${MOC_H_FILES} ../SampleApp.h ${MITK_CHILI_PLUGIN_SDK}/include/chili/plugin.h)
ADD_LIBRARY(${MITK_CHILI_PLUGIN_NAME} SHARED ${CPP_FILES} ${REGISTER_FUNCTIONALITY_CALLS_CPP} ../SampleApp.cpp)

# chili 3.4 needs a workaround for incomplete dicom lib in the chili windows sdk
IF(EXISTS ${MITK_CHILI_PLUGIN_SDK}/../bin)
  MESSAGE(STATUS "Using CHILI 3.4 SDK, enabling workaround")
  SET(CHILI_SDK_34_WORKAROUND TRUE)
ENDIF(EXISTS ${MITK_CHILI_PLUGIN_SDK}/../bin)
IF(CHILI_SDK_34_WORKAROUND AND WIN32)
  FIND_LIBRARY(IPDICOM_LIB libipDicom c:/opt/windows/mbi/lib)
ELSE(CHILI_SDK_34_WORKAROUND AND WIN32)
  FIND_LIBRARY(IPDICOM_LIB ipDicom ${MITK_CHILI_PLUGIN_SDK}/lib)
ENDIF(CHILI_SDK_34_WORKAROUND AND WIN32)

TARGET_LINK_LIBRARIES(${MITK_CHILI_PLUGIN_NAME} ${IPDICOM_LIB} ${FUNC_LIBRARIES}) 
IF(WIN32)
TARGET_LINK_LIBRARIES(${MITK_CHILI_PLUGIN_NAME} z chili ipMsgQT ipUtil)
ENDIF(WIN32)

 
