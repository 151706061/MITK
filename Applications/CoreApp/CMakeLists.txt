SET(MITK_USE_OPENCHERRY 1)
FIND_PACKAGE(MITK)

INCLUDE_DIRECTORIES(${OPENCHERRY_SOURCE_DIR} ${Poco_INCLUDE_DIRS})
LINK_DIRECTORIES(${Poco_LIBRARY_DIRS})
  
ADD_EXECUTABLE(CoreApp CoreApp.cpp)

TARGET_LINK_LIBRARIES(CoreApp optimized org_opencherry_osgi debug org_opencherry_osgi${OPENCHERRY_DEBUG_POSTFIX})
# Make sure all enabled plug-ins are up to date
# MESSAGE(STATUS "oc: ${OPENCHERRY_ENABLED_PLUGINS}")
# MESSAGE(STATUS "oc-qt: ${OPENCHERRY_ENABLED_QT_PLUGINS}")
# MESSAGE(STATUS "mitk: ${MITK_ENABLED_PLUGINS}")
ADD_DEPENDENCIES(CoreApp
 ${OPENCHERRY_ENABLED_PLUGINS}
 ${MITK_CORE_ENABLED_PLUGINS}
)

SET(OPENCHERRY_PLUGIN_CACHE_DIR "${EXECUTABLE_OUTPUT_PATH}/plugin_cache")

CONFIGURE_FILE(CoreApp.ini
               ${EXECUTABLE_OUTPUT_PATH}/CoreApp.ini)

IF(WIN32)
  SET(COREAPP_BUILD_TYPE debug)
  CONFIGURE_FILE(startCoreApp.bat.in
               ${EXECUTABLE_OUTPUT_PATH}/startCoreApp_${COREAPP_BUILD_TYPE}.bat @ONLY)
  SET(COREAPP_BUILD_TYPE release)
  CONFIGURE_FILE(startCoreApp.bat.in
               ${EXECUTABLE_OUTPUT_PATH}/startCoreApp_${COREAPP_BUILD_TYPE}.bat @ONLY)
ENDIF(WIN32)
