PROJECT(OpenCherryPluginGenerator)

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/BundleTemplate/BundleDefaults.cmake)

SET(PLUGIN_ID "" CACHE STRING "unique plugin id")
  
IF(PLUGIN_ID)

SET(GENERATE_NEW_VIEW ON CACHE BOOL "Turn this on for final generation of functionality")
SET(PLUGIN_NAME "" CACHE STRING "")
SET(PLUGIN_VERSION "" CACHE STRING "Version of the functionality")
SET(PLUGIN_VENDOR "" CACHE STRING "Vendor of the functionality")

SET(GENERATE_ACTIVATOR_CLASS "" CACHE STRING "")
SET(GENERATE_VIEW_CLASS "" CACHE STRING "Name of the new view (functionality)")

SET(GENERATE_VIEW_TYPE "" CACHE STRING "")

SET(GENERATE_EDITOR "" CACHE STRING "")
SET(GENERATE_EDITOR_CLASS "" CACHE STRING "")
SET(GENERATE_EDITOR_TYPE "" CACHE STRING "")

SET(GENERATE_SERVICE "" CACHE STRING "")
SET(GENERATE_SERVICE_CLASS "" CACHE STRING "")

IF(GENERATE_ACTIVATOR_CLASS)
	SET(FULLY_QUALIFIED_ACTIVATOR "${BUNDLE_NAMESPACE}::${GENERATE_ACTIVATOR_CLASS}")
ELSE(GENERATE_ACTIVATOR_CLASS)
	SET(FULLY_QUALIFIED_ACTIVATOR "")
ENDIF(GENERATE_ACTIVATOR_CLASS)


FIND_FILE(PLUGIN_TEMPLATE BundleTemplate 
  ${PROJECT_SOURCE_DIR}
  DOC "Path to the plugin templates") 

	SET(PLUGIN_DIR ${CMAKE_CURRENT_BINARY_DIR}/${PLUGIN_ID})
	
	IF(NOT EXISTS ${PLUGIN_TEMPLATE}/META-INF/MANIFEST.MF)
			 MESSAGE(FATAL_ERROR "Could not find ${PLUGIN_TEMPLATE}/META-INF/MANIFEST.MF!") 
	ENDIF(NOT EXISTS ${PLUGIN_TEMPLATE}/META-INF/MANIFEST.MF)

	STRING(REPLACE . _ NormalizedPluginID ${PLUGIN_ID})
	STRING(TOUPPER ${NormalizedPluginID} UNormalizedPluginID)
	
	SET(UDLL_EXPORT_IMPORT_DEFINE ${UNormalizedPluginID} CACHE STRING "")

	#MANIFEST FILE
	CONFIGURE_FILE(${PLUGIN_TEMPLATE}/META-INF/MANIFEST.MF ${PLUGIN_DIR}/META-INF/MANIFEST.MF @ONLY)

	# BundleDll.h
	IF(EXISTS ${PLUGIN_TEMPLATE}/src/BundleDll.h)
		IF(NOT DLL_EXPORT_IMPORT_DEFINE)
			SET(DLL_EXPORT_IMPORT_DEFINE ${NormalizedPluginID})
		ENDIF(NOT DLL_EXPORT_IMPORT_DEFINE)
		STRING(TOLOWER ${UDLL_EXPORT_IMPORT_DEFINE} DLL_EXPORT_IMPORT_DEFINE)
		STRING(TOUPPER ${BUNDLE_NAMESPACE} UBUNDLE_NAMESPACE)
		CONFIGURE_FILE(${PLUGIN_TEMPLATE}/src/BundleDll.h ${PLUGIN_DIR}/src/${BUNDLE_NAMESPACE}${DLL_EXPORT_IMPORT_DEFINE}Dll.h @ONLY)
	ENDIF(EXISTS ${PLUGIN_TEMPLATE}/src/BundleDll.h)

ENDIF(PLUGIN_ID)


