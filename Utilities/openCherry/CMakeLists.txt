INCLUDE(CMake/PluginHelpers.cmake)
INCLUDE(CMake/FindPoco.cmake)

IF(USE_QT AND DESIRED_QT_VERSION EQUAL 4)
  SET(QT_MT_REQUIRED 1)
  SET(BUILD_QT_PLUGINS 1)
  FIND_PACKAGE(Qt)
  
  INCLUDE(${QT_USE_FILE})
ENDIF(USE_QT AND DESIRED_QT_VERSION EQUAL 4)

# Collect plugin directories
FILE(GLOB PLUGIN_DIRS *)
LIST(REMOVE_ITEM PLUGIN_DIRS 
  "${CMAKE_CURRENT_SOURCE_DIR}/CVS" 
  "${CMAKE_CURRENT_SOURCE_DIR}/.svn"
  "${CMAKE_CURRENT_SOURCE_DIR}/CMake"
)

OPTION(BUILD_ALL_PLUGINS "Build all plugins (overriding selection)")
MARK_AS_ADVANCED(BUILD_ALL_PLUGINS)

OPTION(CHERRY_STATIC "Build all plugins as static libraries" OFF)
MARK_AS_ADVANCED(CHERRY_STATIC)

FIND_POCO()

SET(OPENCHERRY_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

INCLUDE_DIRECTORIES(${OPENCHERRY_SOURCE_DIR} ${POCO_INCLUDE_DIRS})

FOREACH(d ${PLUGIN_DIRS})
  IF(IS_DIRECTORY ${d})
  IF(EXISTS ${d}/CMakeLists.txt)
    MESSAGE(STATUS "Processing ${d}")
    ADD_SUBDIRECTORY(${d})
    # GET_DIRECTORY_PROPERTY(PROP DIRECTORY ${d} DEFINITION FUNC_NAME)
  ELSE(EXISTS ${d}/CMakeLists.txt)
    MESSAGE("Plugin dir ${d} doesn't contain a CMakeLists.txt file")
  ENDIF(EXISTS ${d}/CMakeLists.txt)
  ENDIF(IS_DIRECTORY ${d})
ENDFOREACH(d)

