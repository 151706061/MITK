INCLUDE(CMake/PluginHelpers.cmake)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/CMake/")

IF(USE_QT AND DESIRED_QT_VERSION EQUAL 4)
  SET(QT_MT_REQUIRED 1)
  SET(BUILD_QT_PLUGINS 1)
  FIND_PACKAGE(Qt)
  
  INCLUDE(${QT_USE_FILE})
ENDIF(USE_QT AND DESIRED_QT_VERSION EQUAL 4)

OPTION(BUILD_ALL_OPENCHERRY_PLUGINS "Build all plugins (overriding selection)")
MARK_AS_ADVANCED(BUILD_ALL_OPENCHERRY_PLUGINS)

OPTION(OPENCHERRY_STATIC "Build all plugins as static libraries" OFF)
MARK_AS_ADVANCED(OPENCHERRY_STATIC)

FIND_PACKAGE(Poco REQUIRED)

SET(OPENCHERRY_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(OPENCHERRY_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Bundles)
SET(OPENCHERRY_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/Bundles)

# Clear the cache variables
SET(OPENCHERRY_PLUGIN_SOURCE_DIRS "" CACHE INTERNAL "List of base plugin source directories" FORCE)
SET(OPENCHERRY_PLUGIN_BINARY_DIRS "" CACHE INTERNAL "List of base plugin binary directories" FORCE)

CONFIGURE_FILE(openCherryConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/openCherryConfig.cmake @ONLY)

ADD_SUBDIRECTORY(Bundles)
ADD_SUBDIRECTORY(Documentation)

OPTION(BUILD_OPENCHERRY_TESTING "Build the openCherry tests." ON)

IF(BUILD_OPENCHERRY_TESTING)
  ENABLE_TESTING()
  ADD_SUBDIRECTORY(Testing)
ENDIF(BUILD_OPENCHERRY_TESTING)