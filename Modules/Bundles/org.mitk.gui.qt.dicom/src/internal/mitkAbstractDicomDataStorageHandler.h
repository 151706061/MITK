/*=========================================================================
Program: Medical Imaging & Interaction Toolkit
Module: $RCSfile$
Language: C++
Date: $Date$
Version: $Revision$
Copyright (c) German Cancer Research Center, Division of Medical and
Biological Informatics. All rights reserved.
See MITKCopyright.txt or http://www.mitk.org/copyright.html for details.
This software is distributed WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the above copyright notices for more information.
=========================================================================*/

#ifndef __AbstractDicomDataStorageHandler_h
#define __AbstractDicomDataStorageHandler_h

//#include <itkObject.h>
//#include <mitkConfig.h>
//#include <mitkCommon.h>
#include <QTreeView>

#include <ctkDICOMDatabase.h>
#include <ctkDICOMIndexer.h>
#include <ctkDICOMModel.h>
#include <ctkDICOMFilterProxyModel.h>

namespace mitk
{
    class AbstractDicomDataStorageHandler
    {
    public:
        //mitkClassMacro(AbstractDicomDataStorageHandler);
        //itkNewMacro(Self); // Self is a typedef to the class name generated by the mitkClassMacro
        
        void SuspendModel();
        void ResumeModel();
        void ResetModel();

        void SetDatabase(std::string);
        
        /// returns a const pointer to the database
        const QSharedPointer<ctkDICOMDatabase> GetDatabase();
        const QSharedPointer<ctkDICOMIndexer> GetIndexer();
        const QSharedPointer<ctkDICOMModel> GetModel();

        //Methods
    protected:
        AbstractDicomDataStorageHandler();
        virtual ~AbstractDicomDataStorageHandler();

        //Signals

        //Slots

        //Data Member
    protected:
        QSharedPointer<ctkDICOMDatabase> m_DICOMDatabase;
        QSharedPointer<ctkDICOMIndexer> m_DICOMIndexer;
        
        QSharedPointer<ctkDICOMModel> m_DICOMModel;
        QSharedPointer<ctkDICOMFilterProxyModel> m_DICOMProxyModel;

        // used when suspending the ctkDICOMModel
        QSqlDatabase m_EmptyDatabase;

    };
}
#endif