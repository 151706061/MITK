/**

\page org_mitk_views_datamanager DataManager

\imageMacro{data-manager.svg,"Icon of the Data Manager",2.00}

\tableofcontents

\section DataManagerIntroduction Introduction

The Datamanager is the central component to manage medical data like images, segmentation masks, registrations, surfaces, point sets, annotations, measurements, etc..<br>
After loading data into the Datamanager the data is shown in the four-view window, the so-called <em>Standard Display</em>.
The user can now start working on the data by interacting with the data inside the <em>Standard Display</em>,
by using the MITK-plugins such as <em>Segmentation</em> or <em>Basic Image Processing</em> or by using the context menu inside the data manager.

\imageMacro{QmitkDatamanager_Overview.png, "How MITK looks when started", 16.00}

\section DataManagerLoadingData Loading Data

There are several ways of loading data into the Datamanager as so-called <em>data nodes</em>:

<ul>
	<li> drag and drop data (e.g. from a file explorer or desktop) into the Datamanager
	<li> drag and drop data (e.g. from a file explorer or desktop) into one of the four windows of the <em>Standard Display</em>
	<li> use the keyboard shortcut <em>Ctrl + o</em>
	<li> use the <em>Open File</em> Button in the left upper corner and use the <em>Open</em> Dialog
	<li> use <em>File -> Open File...</em> from the top menu
</ul>

A lot of file-formats can be loaded into MITK, for example:

<ul>
	<li> 2D-images / 3D-volumes with or without several time steps (*.dcm, *.ima, *.pic, *.nrrd, ...)
	<li> Surfaces (*.stl, *.vtk, ...)
	<li> Point sets (*.mps)
	<li> and many more
</ul>

The user can also load a series of 2D images (e.g. image001.png, image002.png ...) to a MITK 3D volume. 
To do this, just drag and drop one of those 2D data files into the Datamanager by holding the ALT key.

\section DataManagerSavingData Saving Data

There are several ways of saving data from the Datamanager:

<ul>
	<li> use the keyboard shortcut <em>Ctrl + s</em> on a single data node
	<li> use the keyboard shortcut <em>Ctrl + s</em> on multiple data nodes
	<li> use the context menu <em>right-click -> Save</em> on a single data node
	<li> use the context menu <em>right-click -> Save</em> on multiple data nodes
	<li> use <em>File -> Save...</em> from the top menu on a single data node
	<li> use <em>File -> Save...</em> from the top menu on multiple data nodes
</ul>

There are two ways of saving a whole whole project with all data nodes:
<ul>
	<li> use the <em>Save Project</em> Button in the left upper corner
	<li> use <em>File -> Save Project...</em> from the top menu
</ul>

When saving the whole project, the order / hierarchy of data nodes is saved as well. By contrast the order / hierarchy is lost, when saving a single data node.

\section DataManagerWorking Working with the Datamanager

After loading data into the Datamanager the data appears as data nodes in a sorted list inside the Datamanager.
The user can change the order of the data nodes manually by dragging one or multiple data nodes and dropping them at any position inside the Datamanager.
Data nodes can also be sorted hierarchically as a parent-child-relation.
For example after using the <em>Segmentation-Plugin</em> to create a segmentation on <em>Data-Element1</em>, the result is created as <em>Data-Element2</em>,
which is a child of <em>Data-Element1</em> (see \ref ParentChild "Parent-Child-Relation" screenshot).<br>
A parent-child-relation can be changed by dragging a child of a data node and dropping it onto another data node.
For this the Property <em>Allow changing of parent nodes</em> needs to be enabled (see \ref QmitkDataManagerPreferencePage "Preference page"). 

\anchor ParentChild
\imageMacro{QmitkDatamanager_ParentChild.png, "Parent-Child-Relation", 9.61}

\subsection DataManagerNodeVisibility Visibility of data nodes

By default all loaded data nodes are visible in the <em>Standard Display</em>. The visibility is indicated by the checkbox in front of the data node name in the Datamanager.
If a data node is visible, the checkbox is filled - an empty checkbox indicates a hidden data node (see Screenshot1).
<em>Hint: The data nodes are rendered on top of each other, such that the topmost visible data node is always displayed on top of other data nodes. By hiding
the topmost visible data node the next data node becomes the topmost visible data node and the hidden data node is not rendered anymore.</em>
<em>Note: "Visible" does not mean that the node is correctly displayed inside the render windows. The user might have to re-initialize a data node to have it correctly displayed.</em>

\subsection DataManagerNodeSelection Selection of data nodes

Some MITK-plugins contain widgets to control the data nodes that are used for plugin-specific data processing. These widgets can be configured such that they listen to the current selection
of the Datamanager. Having such a plugin active each selection change of data nodes inside the data manager will change the respective selection of the plugin. The data node selection widgets
can have specific node predicates, which means that only specific data nodes can be controlled by the widgets. It might happen that a selected data node will not be represented in such a
selection widget or that the selection widget will be emptied.

\subsection DataManagerNodeRenaming Renaming data nodes

There are two ways of changing the name of a data node inside the Datamanager:

<ul>
	<li> use the <em>F2</em> key on a single data node
	<li> double-click on a single data node
</ul>

In both cases the new name can be accepted by hitting <em>Enter</em> or by clicking somewhere else.

\section DataManagerContextMenu Context Menu

\subsection DataManagerRepresentation Representation of data nodes

There are different types of representations how to show the Data-Element inside the standard view. By right-clicking on the Data-Element all options are listed (see Screenshot2 and Screenshot 3).

<ul>
	<li> An arbitrary color can be chosen
	<li> The opacity can be changed with a slide control
	<li> In case of images a texture interpolation can be switched on or off. The texture interpolation smoothes the image, so that no single pixels are visible anymore.
	<li> In case of surfaces the surface representation can be changed between points, wireframe or surface.
	<li> Global reinit updates all windows to contain all the current data:

	-  The orientation of the worldgeometry, which basically defines the rendering space, is set to the standard coordinate system, i.e. [(0,0,1);(0,1,0);(0,0,1)]
	-  The size of the worldgeometry is calculated, so that it includes all loaded data (depends on size and position of your data)
	-  The spacing is set to the smallest existing spacing regarding your data

	Reinit updates a single data item and fits the windows to contain only this data item:

	-  The orientation of the worldgeometry, is aligned according to the orientation of the currently selected datanode
	-  The size of the worldgeometry is set to the size of the currently selected datanode
	-  The spacing is set to the spacing of the currently selected datanode
</ul>

\imageMacro{QmitkDatamanager_ImageProperties.png,"Screenshot2: Properties for images",10.56}
\imageMacro{QmitkDatamanager_SurfaceProperties.png,"Screenshot3: Properties for surfaces",11.01}

\section DataManagerPreferences Data Manager Preference

\subsection DataManagerHotkeys Data Manager Hotkeys
*/
