<!DOCTYPE UI><UI version="3.3" stdsetdef="1">
<class>QmitkStdMultiWidget</class>
<widget class="QWidget">
    <property name="name">
        <cstring>QmitkStdMultiWidget</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>364</width>
            <height>477</height>
        </rect>
    </property>
    <property name="caption">
        <string>Form1</string>
    </property>
    <hbox>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <property name="margin">
            <number>2</number>
        </property>
        <property name="spacing">
            <number>2</number>
        </property>
        <widget class="QLayoutWidget">
            <property name="name">
                <cstring>layout4</cstring>
            </property>
            <hbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <property name="margin">
                    <number>0</number>
                </property>
                <property name="spacing">
                    <number>0</number>
                </property>
                <widget class="QLayoutWidget">
                    <property name="name">
                        <cstring>layout3</cstring>
                    </property>
                    <grid>
                        <property name="name">
                            <cstring>unnamed</cstring>
                        </property>
                        <property name="spacing">
                            <number>0</number>
                        </property>
                        <widget class="QmitkRenderWindow" row="0" column="0">
                            <property name="name">
                                <cstring>mitkWidget1</cstring>
                            </property>
                        </widget>
                        <widget class="QmitkRenderWindow" row="0" column="1">
                            <property name="name">
                                <cstring>mitkWidget2</cstring>
                            </property>
                            <property name="enabled">
                                <bool>true</bool>
                            </property>
                        </widget>
                        <widget class="QmitkRenderWindow" row="1" column="0">
                            <property name="name">
                                <cstring>mitkWidget3</cstring>
                            </property>
                        </widget>
                        <widget class="QmitkRenderWindow" row="1" column="1">
                            <property name="name">
                                <cstring>mitkWidget4</cstring>
                            </property>
                        </widget>
                    </grid>
                </widget>
                <widget class="QmitkLevelWindowWidget">
                    <property name="name">
                        <cstring>levelWindowWidget</cstring>
                    </property>
                    <property name="sizePolicy">
                        <sizepolicy>
                            <hsizetype>5</hsizetype>
                            <vsizetype>5</vsizetype>
                            <horstretch>0</horstretch>
                            <verstretch>0</verstretch>
                        </sizepolicy>
                    </property>
                    <property name="minimumSize">
                        <size>
                            <width>0</width>
                            <height>50</height>
                        </size>
                    </property>
                    <property name="maximumSize">
                        <size>
                            <width>0</width>
                            <height>2000</height>
                        </size>
                    </property>
                </widget>
            </hbox>
        </widget>
    </hbox>
</widget>
<customwidgets>
    <customwidget>
        <class>QmitkLevelWindowWidget</class>
        <header location="global">QmitkLevelWindowWidget.h</header>
        <sizehint>
            <width>-1</width>
            <height>-1</height>
        </sizehint>
        <container>0</container>
        <sizepolicy>
            <hordata>5</hordata>
            <verdata>5</verdata>
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
        </sizepolicy>
        <pixmap>image0</pixmap>
        <signal>levelWindow(mitk::LevelWindow*)</signal>
        <signal>levelWindow( const LevelWindow&amp; )</signal>
        <slot access="public" specifier="">slot()</slot>
    </customwidget>
    <customwidget>
        <class>QmitkRenderWindow</class>
        <header location="global">QmitkRenderWindow.h</header>
        <sizehint>
            <width>-1</width>
            <height>-1</height>
        </sizehint>
        <container>0</container>
        <sizepolicy>
            <hordata>5</hordata>
            <verdata>5</verdata>
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
        </sizepolicy>
        <pixmap>image0</pixmap>
    </customwidget>
</customwidgets>
<images>
    <image name="image0">
        <data format="PNG" length="1002">89504e470d0a1a0a0000000d4948445200000016000000160806000000c4b46c3b000003b149444154789cad94514c5b5518c77fe7dc4b7b4b6150bb96324418ca32358bee6192609c51d883892ce083f1718b3ebb185f8dc91e972cf39d2d6a78d0b027b3cd07d9e68c81c625a6c139408a4384f416100aed6d4b7bdb7b8e0fc0921a70c6ed7b3ae7e43bbff3fffedfc927e2f138bbd1dbdbab7902118fc785d8058f8d8de9aeae2e72b91cb66de338ce7f82e47239666767492412b8aefbf0dcdc553a323242f4501d918e2d3a8f15a9784584100809a609526eafd1a0f54e6142e029c5c21f3ef41583bb77a805efbe1ce9d86279e32619678eaab7853fa0f02a16abb64166ad0cdac75307eb3874b84cb0a14aa5a24108cc0688c48c9a4a1e826ddbe6f0b12219678e8ace610502ccdfafe3f68d3c33bf6c01c59dcc209d472c4e0d35d2f3ba81d205d06005e4de60c77170bd2255af80150870f70e8c0eaf009260a349577714e913a4175d16925b5cbe50607931cc3b677c68ca28a5f7066f5b26f00760febec9e8f032a0e81b68a17fc0201415989647a9d8c4c498cbe8f05f5cff3a4d4bac8bfe210b290b35e01afd428257b1b875cd01aaf4bd1de5dd0fea688e1530ad1c1bab16b7af17393558cf997311c0e49bafd670d6258621f6576c9ab09a3248fe5ae6c08103f49f36517213d33070369bf8e2529ee9c90ceb2b2eef7f14617c2c48722a4b7226845143fa87622905ebeb6514253a9eb5084504a66950c88618bee0303d99217cb09e9ed71a09369538fa523d00e9a50a42eed3bc6d8f41281fa0903e8561796cac86f8f2b33c33930ea0f0fb4d5adbeb30ad22866ffbbad226d2a805d7ee0484220208925aaa50deaa67e27b97e9c90ccdcdf5c462cdd8a94d2e7e62f3603244ea410989a4ed191f52a8fd156b056d9d553a9e0bf0e7ef45c6bf7339fd5e90ec7a88575e6d20d6e6e7e2a755ec854dce7fb8885b2cd014f6f3c2714d3a550bae55ac35c1068fb7061b00b87a7995899b25ce9e0b73e24d8fae97b37c7cbe9370b499fce6066eb54adf6098f6ee2a9a7ff9c70841a5023d270deca510d746537c7e29cdf8ad20475fb4307c82d4fc324ec6859d66fdfc6381e44014b36e9fe6e572393ca54068aa22cfd0598b686b3737aeae90bc9725796f0350802414b6e81b7c9a9f7e70708a2e6e5991cfeee3f1ecec2c0b0b3e8c068142a2a8d23728397132c6dc6f2e2b8b0a8da4b5ddc7f3c735ed47146f0cb4502983693a4c25ca7b83138904fa8a412466e00f48b4271086c2901263676c4a6990b615b6ade15b85694af239984a94585bf6f606bbae5b334f1f37e4a3531e031c8fc7c5a312ff17f849c3e3f1b8f81b8be6900aca9b61c90000000049454e44ae426082</data>
    </image>
</images>
<includes>
    <include location="local" impldecl="in declaration">mitkCommon.h</include>
    <include location="global" impldecl="in implementation">qframe.h</include>
    <include location="global" impldecl="in implementation">qcolor.h</include>
    <include location="global" impldecl="in implementation">mitkDataTreeNode.h</include>
    <include location="global" impldecl="in implementation">mitkDataTree.h</include>
    <include location="global" impldecl="in implementation">mitkPlaneGeometry.h</include>
    <include location="local" impldecl="in implementation">QmitkCommonFunctionality.h</include>
    <include location="global" impldecl="in declaration">QmitkRenderWindow.h</include>
    <include location="global" impldecl="in declaration">mitkDataTree.h</include>
    <include location="global" impldecl="in declaration">mitkSliceNavigationController.h</include>
    <include location="global" impldecl="in declaration">mitkDisplayInteractor.h</include>
    <include location="global" impldecl="in declaration">mitkDisplayVectorInteractor.h</include>
    <include location="global" impldecl="in declaration">mitkCoordinateSupplier.h</include>
    <include location="global" impldecl="in declaration">mitkPositionTracker.h</include>
    <include location="global" impldecl="in declaration">mitkSlicesRotator.h</include>
    <include location="global" impldecl="in declaration">mitkSlicesSwiveller.h</include>
    <include location="global" impldecl="in declaration">mitkGradientBackground.h</include>
    <include location="global" impldecl="in declaration">mitkLevelWindowProperty.h</include>
    <include location="global" impldecl="in declaration">mitkColorProperty.h</include>
    <include location="global" impldecl="in declaration">mitkLogoRendering.h</include>
    <include location="global" impldecl="in declaration">mitkColoredRectangleRendering.h</include>
    <include location="global" impldecl="in declaration">mitkDataStorage.h</include>
</includes>
<variables>
    <variable>mitk::ColoredRectangleRendering::Pointer m_RectangleRendering3;</variable>
    <variable>int m_PlaneMode;</variable>
    <variable>mitk::ColoredRectangleRendering::Pointer m_RectangleRendering1;</variable>
    <variable access="public">enum { PLANE_MODE_SLICING = 0, PLANE_MODE_ROTATION, PLANE_MODE_SWIVEL };</variable>
    <variable>mitk::LogoRendering::Pointer m_LogoRendering4;</variable>
    <variable>mitk::GradientBackground::Pointer m_GradientBackground4;</variable>
    <variable>mitk::GradientBackground::Pointer m_GradientBackground3;</variable>
    <variable access="public">enum { LAYOUT_DEFAULT = 0, LAYOUT_2D_IMAGES_UP, LAYOUT_2D_IMAGES_LEFT, LAYOUT_BIG_3D, LAYOUT_WIDGET1, LAYOUT_WIDGET2, LAYOUT_WIDGET3, LAYOUT_2X_2D_AND_3D_WIDGET, LAYOUT_ROW_WIDGET_3_AND_4, LAYOUT_COLUMN_WIDGET_3_AND_4, LAYOUT_ROW_WIDGET_SMALL3_AND_BIG4 ,LAYOUT_SMALL_UPPER_WIDGET2_BIG3_AND4,LAYOUT_2D_AND_3D_LEFT_2D_RIGHT_WIDGET};</variable>
    <variable>int m_Layout;</variable>
    <variable>mitk::DisplayVectorInteractor::Pointer m_MoveAndZoomInteractor;</variable>
    <!--<variable>mitk::DataTreeIteratorClone planesIterator;</variable>-->
    <variable>mitk::SliceNavigationController::Pointer m_TimeNavigationController;</variable>
    <variable>mitk::CoordinateSupplier::Pointer m_LastLeftClickPositionSupplier;</variable>
    <variable>mitk::PositionTracker::Pointer m_PositionTracker;</variable>
    <variable>mitk::DataTreeNode::Pointer m_PositionTrackerNode;</variable>
    <variable>mitk::DataTreeBase::Pointer m_Tree;</variable>
    <variable>mitk::SlicesRotator::Pointer m_SlicesRotator;</variable>
    <variable>mitk::SlicesSwiveller::Pointer m_SlicesSwiveller;</variable>
    <variable>mitk::GradientBackground::Pointer m_GradientBackground1;</variable>
    <variable>mitk::GradientBackground::Pointer m_GradientBackground2;</variable>
    <variable>mitk::LogoRendering::Pointer m_LogoRendering1;</variable>
    <variable>mitk::LogoRendering::Pointer m_LogoRendering2;</variable>
    <variable>mitk::LogoRendering::Pointer m_LogoRendering3;</variable>
    <variable>mitk::ColoredRectangleRendering::Pointer m_RectangleRendering2;</variable>
    <variable>mitk::ColoredRectangleRendering::Pointer m_RectangleRendering4;</variable>
    <variable>mitk::DataStorage::Pointer m_DataStorage;</variable>
</variables>
<signals>
    <signal>WheelMoved( QWheelEvent* )</signal>
    <signal>WidgetPlanesVisibilityChanged(bool)</signal>
    <signal>WidgetPlanesLockedChanged(bool)</signal>
    <signal>WidgetPlanesRotationLockedChanged(bool)</signal>
    <signal>WidgetPlanesRotationLinked(bool)</signal>
    <signal>WidgetPlanesRotationEnabled(bool)</signal>
    <signal>ViewsInitialized()</signal>
    <signal>WidgetPlaneModeSlicing(bool)</signal>
    <signal>WidgetPlaneModeRotation(bool)</signal>
    <signal>WidgetPlaneModeSwivel(bool)</signal>
</signals>
<slots>
    <slot>changeLayoutTo2DImagesUp()</slot>
    <slot>changeLayoutTo2DImagesLeft()</slot>
    <slot>changeLayoutToDefault()</slot>
    <slot>changeLayoutToBig3D()</slot>
    <slot>changeLayoutToWidget1()</slot>
    <slot>changeLayoutToWidget2()</slot>
    <slot>changeLayoutToWidget3()</slot>
    <slot>changeLayoutToRowWidget3And4()</slot>
    <slot>changeLayoutToColumnWidget3And4()</slot>
    <slot>changeLayoutToRowWidgetSmall3andBig4()</slot>
    <slot>changeLayoutToSmallUpperWidget2Big3and4()</slot>
    <slot>changeLayoutTo2x2Dand3DWidget()</slot>
    <slot>changeLayoutToLeft2Dand3DRight2D()</slot>
    <slot>SetData( mitk::DataTreeIteratorBase * it )</slot>
    <slot>Fit()</slot>
    <slot>InitPositionTracking()</slot>
    <slot>AddDisplayPlaneSubTree( mitk::DataTreeIteratorBase * it = NULL)</slot>
    <slot>EnableStandardLevelWindow()</slot>
    <slot>DisableStandardLevelWindow()</slot>
    <slot returnType="bool">InitializeStandardViews( mitk::DataTreeIteratorBase * it )</slot>
    <slot returnType="bool">InitializeStandardViews( const mitk::Geometry3D * geometry )</slot>
    <slot returnType="bool">InitializeStandardViews( mitk::DataStorage * ds )</slot>
    <slot>wheelEvent( QWheelEvent * e )</slot>
    <slot>EnsureDisplayContainsPoint( mitk::DisplayGeometry * displayGeometry, const mitk::Point3D &amp; p )</slot>
    <slot>MoveCrossToPosition( const mitk::Point3D &amp; newPosition )</slot>
    <slot>EnableNavigationControllerEventListening()</slot>
    <slot>DisableNavigationControllerEventListening()</slot>
    <slot>EnableGradientBackground()</slot>
    <slot>DisableGradientBackground()</slot>
    <slot>EnableDepartmentLogo()</slot>
    <slot>DisableDepartmentLogo()</slot>
    <slot>SetWidgetPlaneVisibility( const char * widgetName, bool visible, mitk::BaseRenderer *renderer = NULL )</slot>
    <slot>SetWidgetPlanesVisibility( bool visible, mitk::BaseRenderer *renderer = NULL )</slot>
    <slot>SetWidgetPlanesLocked( bool locked )</slot>
    <slot>SetWidgetPlanesRotationLocked( bool locked )</slot>
    <slot>SetWidgetPlanesRotationLinked( bool link )</slot>
    <slot>SetWidgetPlaneMode( int mode )</slot>
    <slot>SetGradientBackgroundColors( const mitk::Color &amp; upper, const mitk::Color &amp; lower )</slot>
    <slot>SetDepartmentLogoPath( const char * path )</slot>
    <slot>SetWidgetPlaneModeToSlicing( bool activate )</slot>
    <slot>SetWidgetPlaneModeToRotation( bool activate )</slot>
    <slot>SetWidgetPlaneModeToSwivel( bool activate )</slot>
    <slot>SetData(mitk::DataStorage::Pointer dataStorage)</slot>
</slots>
<functions>
    <function access="private" specifier="non virtual">init()</function>
    <function returnType="mitk::SliceNavigationController *">GetTimeNavigationController()</function>
    <function>RequestUpdate()</function>
    <function>ForceImmediateUpdate()</function>
    <function specifier="non virtual" returnType="mitk::DisplayVectorInteractor *">GetMoveAndZoomInteractor()</function>
    <function returnType="QmitkRenderWindow *">GetRenderWindow1() const</function>
    <function returnType="QmitkRenderWindow *">GetRenderWindow2() const</function>
    <function returnType="QmitkRenderWindow *">GetRenderWindow3() const</function>
    <function returnType="QmitkRenderWindow *">GetRenderWindow4() const</function>
    <function returnType="const mitk::Point3D &amp;">GetLastLeftClickPosition() const</function>
    <function returnType="const mitk::Point3D">GetCrossPosition() const</function>
    <function>EnablePositionTracking()</function>
    <function>DisablePositionTracking()</function>
    <function returnType="int">GetLayout() const</function>
    <function specifier="non virtual" returnType="mitk::SlicesRotator *">GetSlicesRotator() const</function>
    <function returnType="mitk::SlicesSwiveller *">GetSlicesSwiveller() const</function>
</functions>
<exportmacro>QMITK_EXPORT</exportmacro>
<layoutdefaults spacing="6" margin="11"/>
<includehints>
    <includehint>QmitkRenderWindow.h</includehint>
    <includehint>QmitkRenderWindow.h</includehint>
    <includehint>QmitkRenderWindow.h</includehint>
    <includehint>QmitkRenderWindow.h</includehint>
    <includehint>QmitkLevelWindowWidget.h</includehint>
</includehints>
</UI>
