#ifndef QMITKMATERIALSHOWCASE_H
#define QMITKMATERIALSHOWCASE_H

#include <qvariant.h>


#include <QmitkRenderWindow.h>
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QVBoxLayout>
#include <QtGui/QWidget>
#include "QmitkRenderWindow.h"
#include "mitkCommon.h"
#include "mitkDataTree.h"
#include "mitkDataTreeNode.h"
#include "mitkMaterialProperty.h"
#include "mitkSurface.h"
#include "QtGui/QMenubarUpdatedEvent"
#include "vtkRenderer.h"
#include "vtkTextActor.h"

QT_BEGIN_NAMESPACE

class QMITK_EXPORT Ui_QmitkMaterialShowcase
{
public:
    QVBoxLayout *vboxLayout;
    QmitkRenderWindow *m_RenderWindow;

    void setupUi(QWidget *QmitkMaterialShowcase)
    {
    if (QmitkMaterialShowcase->objectName().isEmpty())
        QmitkMaterialShowcase->setObjectName(QString::fromUtf8("QmitkMaterialShowcase"));
    QmitkMaterialShowcase->resize(124, 80);
    QSizePolicy sizePolicy(static_cast<QSizePolicy::Policy>(3), static_cast<QSizePolicy::Policy>(3));
    sizePolicy.setHorizontalStretch(0);
    sizePolicy.setVerticalStretch(0);
    sizePolicy.setHeightForWidth(QmitkMaterialShowcase->sizePolicy().hasHeightForWidth());
    QmitkMaterialShowcase->setSizePolicy(sizePolicy);
    vboxLayout = new QVBoxLayout(QmitkMaterialShowcase);
    vboxLayout->setSpacing(0);
    vboxLayout->setMargin(0);
    vboxLayout->setObjectName(QString::fromUtf8("vboxLayout"));
    m_RenderWindow = new QmitkRenderWindow(QmitkMaterialShowcase);
    m_RenderWindow->setObjectName(QString::fromUtf8("m_RenderWindow"));
    QSizePolicy sizePolicy1(static_cast<QSizePolicy::Policy>(1), static_cast<QSizePolicy::Policy>(1));
    sizePolicy1.setHorizontalStretch(0);
    sizePolicy1.setVerticalStretch(0);
    sizePolicy1.setHeightForWidth(m_RenderWindow->sizePolicy().hasHeightForWidth());
    m_RenderWindow->setSizePolicy(sizePolicy1);
    m_RenderWindow->setMinimumSize(QSize(100, 100));

    vboxLayout->addWidget(m_RenderWindow);


    retranslateUi(QmitkMaterialShowcase);

    QMetaObject::connectSlotsByName(QmitkMaterialShowcase);
    } // setupUi

    void retranslateUi(QWidget *QmitkMaterialShowcase)
    {
    QmitkMaterialShowcase->setWindowTitle(QApplication::translate("QmitkMaterialShowcase", "QmitkMaterialShowcase", 0, QApplication::UnicodeUTF8));
    Q_UNUSED(QmitkMaterialShowcase);
    } // retranslateUi


protected:
    enum IconID
    {
        image0_ID,
        unknown_ID
    };
    static QPixmap qt_get_icon(IconID id)
    {
    static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0xf6, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xcd, 0x95, 0x31, 0x68, 0x1c,
    0x47, 0x14, 0x86, 0x3f, 0x85, 0x35, 0xbc, 0x05, 0x15, 0xb3, 0x20, 0xc3,
    0x2e, 0xd8, 0xe0, 0x85, 0x18, 0xac, 0xce, 0x27, 0xd2, 0xe8, 0xc0, 0x85,
    0x54, 0x9e, 0x51, 0x71, 0x31, 0x18, 0x92, 0x54, 0x46, 0xa4, 0x09, 0xb8,
    0x30, 0xa4, 0x72, 0x19, 0x84, 0x03, 0x49, 0x6d, 0x52, 0x08, 0xb5, 0x52,
    0x11, 0x62, 0x17, 0x46, 0x76, 0x21, 0x90, 0x20, 0xc5, 0x5e, 0x23, 0x74,
    0x02, 0x1b, 0x56, 0xa0, 0xc0, 0x1a, 0x72, 0x30, 0x07, 0x16, 0xcc, 0x14,
    0x86, 0x7d, 0xe0, 0x85, 0x4b, 0xb1, 0xeb, 0x93, 0xee, 0x4e, 0x86, 0x04,
    0x12, 0xc8, 0x34, 0xbb, 0xf3, 0x76, 0xe7, 0x7b, 0xff, 0xfe, 0xef, 0xcd,
    0xec, 0x5c, 0x96, 0x65, 0xfc, 0x17, 0x23, 0x98, 0x0e, 0x1c, 0x1d, 0x1e,
    0x8d, 0xac, 0xb5, 0xf8, 0xf7, 0xfe, 0x6f, 0x01, 0x9c, 0x77, 0x14, 0xa7,
    0x05, 0xbd, 0xc3, 0x1e, 0xd9, 0xef, 0xd9, 0xdc, 0xa5, 0xe0, 0x52, 0x8b,
    0x51, 0xda, 0x52, 0xd2, 0x96, 0xa2, 0x1f, 0x14, 0x01, 0xb8, 0x72, 0xfe,
    0x96, 0x34, 0x57, 0xad, 0x2e, 0xac, 0xae, 0xa0, 0x28, 0x40, 0x37, 0x85,
    0x76, 0xbb, 0x3d, 0xca, 0xb2, 0x1a, 0x3e, 0x06, 0x1f, 0x1d, 0x1e, 0x8d,
    0xd2, 0x96, 0x62, 0xdd, 0x4b, 0xbc, 0x2f, 0x80, 0x12, 0x11, 0x45, 0x2b,
    0xc1, 0x0e, 0x42, 0xfc, 0xbb, 0x12, 0x08, 0x31, 0x57, 0x21, 0xbd, 0x51,
    0x22, 0xf3, 0xe7, 0x09, 0x64, 0x1e, 0x92, 0x18, 0xfa, 0x97, 0x59, 0x61,
    0xad, 0x25, 0x6d, 0x69, 0x03, 0x75, 0x88, 0x08, 0xf9, 0xeb, 0x88, 0xfd,
    0x17, 0x8e, 0xfc, 0xd8, 0x03, 0xda, 0xbc, 0x29, 0xa4, 0xb7, 0x84, 0xd5,
    0x6e, 0xc4, 0xf2, 0x0a, 0x50, 0x95, 0x75, 0x54, 0x26, 0x2d, 0x1a, 0x83,
    0xfd, 0x7b, 0x8f, 0x7e, 0xd0, 0x31, 0x34, 0x3b, 0x80, 0xed, 0x5f, 0x6c,
    0xa3, 0x48, 0x48, 0x6f, 0x19, 0x24, 0x00, 0x3b, 0x50, 0x8a, 0x13, 0x65,
    0xeb, 0x47, 0x8b, 0x7d, 0x6b, 0xf8, 0xe6, 0x41, 0x08, 0x94, 0x33, 0xde,
    0x4f, 0x78, 0x2c, 0x4d, 0xe6, 0xfc, 0x75, 0xd8, 0x40, 0x95, 0xd5, 0xb5,
    0x98, 0x4e, 0x37, 0xc4, 0x2c, 0x00, 0x52, 0xa2, 0x9a, 0x90, 0xbd, 0x52,
    0xb6, 0x37, 0x2d, 0x2f, 0x77, 0x86, 0x24, 0x71, 0x4a, 0xe7, 0x7e, 0x04,
    0x4c, 0x16, 0xfb, 0xb3, 0x89, 0xd9, 0x15, 0xd0, 0x4a, 0xd8, 0x7f, 0xee,
    0xc6, 0xd0, 0xaf, 0xbf, 0x0d, 0x31, 0xb1, 0x03, 0x71, 0xf8, 0xb3, 0x90,
    0xfd, 0xe7, 0x8e, 0xbb, 0x5d, 0x61, 0xfd, 0x61, 0x02, 0x08, 0xbf, 0xed,
    0x38, 0xdc, 0xbb, 0x69, 0x89, 0xd3, 0xd3, 0x00, 0xec, 0x20, 0x24, 0x7f,
    0xe3, 0x31, 0xc6, 0xd0, 0xe9, 0x86, 0x10, 0x38, 0x08, 0x40, 0x7d, 0xc4,
    0xd6, 0x4f, 0x25, 0xf9, 0xb1, 0xc7, 0x9f, 0xc1, 0xfa, 0xa3, 0x88, 0x6c,
    0x4f, 0xc8, 0xdf, 0x78, 0xf2, 0x93, 0x68, 0xdc, 0x31, 0x97, 0x2b, 0x86,
    0xa6, 0xfa, 0x4a, 0x72, 0x43, 0xea, 0xcf, 0x6f, 0xa0, 0x4f, 0x9f, 0xd4,
    0x45, 0x34, 0x0b, 0x42, 0xeb, 0x4e, 0x88, 0x44, 0xca, 0x62, 0xab, 0xae,
    0x98, 0x2d, 0xca, 0xc6, 0xc8, 0x4f, 0x80, 0xeb, 0xac, 0x61, 0x7d, 0x2f,
    0xb5, 0xa7, 0x7e, 0x18, 0xf1, 0xf4, 0x49, 0x49, 0x7e, 0xac, 0x80, 0x22,
    0x02, 0xe9, 0x35, 0xa9, 0x9f, 0x07, 0x61, 0xb3, 0x32, 0x9c, 0xb1, 0x62,
    0x46, 0xb1, 0xb9, 0x0a, 0x20, 0x14, 0x03, 0x45, 0x35, 0x22, 0x3b, 0xa0,
    0x56, 0x6a, 0x84, 0x38, 0x36, 0x0c, 0x07, 0x9e, 0x8d, 0xc7, 0x96, 0xbc,
    0x6f, 0xb0, 0xa7, 0x75, 0x37, 0x24, 0xa9, 0x4c, 0x63, 0x26, 0xf3, 0x68,
    0x55, 0x37, 0x7f, 0xfa, 0xb9, 0x50, 0xfc, 0xa1, 0x64, 0xaf, 0x94, 0xce,
    0x57, 0x82, 0x3f, 0x33, 0x2c, 0xdf, 0x09, 0x49, 0xae, 0x09, 0x1b, 0x8f,
    0x61, 0xf8, 0xd6, 0xb3, 0xf1, 0x5d, 0x81, 0xaa, 0x62, 0x16, 0x84, 0xa5,
    0xdb, 0xca, 0xee, 0x9f, 0x3a, 0x01, 0x9e, 0x51, 0x2c, 0xf3, 0xd0, 0xe9,
    0x46, 0x00, 0x6c, 0x6f, 0x5a, 0x7a, 0x7b, 0xca, 0xfa, 0xa3, 0x88, 0xa5,
    0x15, 0x48, 0x5b, 0x8e, 0xef, 0x7f, 0x48, 0x31, 0xb1, 0xc1, 0x7b, 0x8f,
    0x56, 0xca, 0x6a, 0x37, 0x21, 0xbe, 0x39, 0x23, 0x78, 0xf6, 0x10, 0xd2,
    0x0a, 0xda, 0x2b, 0x60, 0x07, 0x86, 0x67, 0x3b, 0x43, 0xb6, 0x7e, 0xb6,
    0x64, 0x7b, 0xc2, 0xe2, 0xa2, 0x80, 0x80, 0x3d, 0xb5, 0xe8, 0x99, 0x8e,
    0x57, 0xf6, 0x0f, 0x1c, 0xc5, 0x5a, 0x42, 0x18, 0x08, 0xe7, 0xbb, 0xf3,
    0x02, 0xd8, 0x79, 0x37, 0x0e, 0x96, 0x94, 0xdc, 0x7b, 0x10, 0x12, 0xc5,
    0x29, 0xbb, 0xbf, 0xd6, 0xdd, 0x90, 0x1f, 0x5f, 0xa8, 0xc3, 0x82, 0xd0,
    0xe9, 0xa6, 0x64, 0x07, 0x0e, 0xa7, 0x8a, 0x2a, 0x38, 0x3f, 0x69, 0xc5,
    0x18, 0x5c, 0x9c, 0x16, 0x14, 0x05, 0x30, 0x7f, 0x0e, 0xef, 0x7c, 0x19,
    0xb2, 0xbc, 0x92, 0x90, 0x9f, 0x44, 0xd8, 0xa2, 0x8e, 0x27, 0xd7, 0x85,
    0xa5, 0x2f, 0x94, 0xf8, 0x26, 0xac, 0xae, 0x25, 0xb5, 0xc8, 0xc0, 0x91,
    0xf7, 0x3f, 0x01, 0xee, 0x1d, 0xf6, 0xd0, 0x4d, 0x21, 0x89, 0x9b, 0x56,
    0xab, 0x80, 0xc0, 0x43, 0xf0, 0xb1, 0x0d, 0xa5, 0xde, 0x40, 0x16, 0x76,
    0x5f, 0x00, 0x28, 0x61, 0x20, 0x38, 0x0f, 0x79, 0x5f, 0xb1, 0xc3, 0x49,
    0x4b, 0xe7, 0x2e, 0xfe, 0x41, 0xda, 0xed, 0xf6, 0x68, 0xda, 0xf3, 0x7f,
    0x32, 0x3e, 0x9e, 0xc5, 0x33, 0xe0, 0x7f, 0x73, 0xcc, 0xb4, 0xdb, 0xff,
    0x1e, 0xfc, 0x17, 0xab, 0xdf, 0x4f, 0xb3, 0xa1, 0x6b, 0x3c, 0x82, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

    switch (id) {
        case image0_ID:  { QImage img; img.loadFromData(image0_data, sizeof(image0_data), "PNG"); return QPixmap::fromImage(img); }
        default: return QPixmap();
    } // switch
    } // icon

};

namespace Ui {
    class QMITK_EXPORT QmitkMaterialShowcase: public Ui_QmitkMaterialShowcase {};
} // namespace Ui

QT_END_NAMESPACE

class QMITK_EXPORT QmitkMaterialShowcase : public QWidget, public Ui::QmitkMaterialShowcase
{
    Q_OBJECT

public:
    QmitkMaterialShowcase(QWidget* parent = 0, const char* name = 0, Qt::WindowFlags fl = 0);
    ~QmitkMaterialShowcase();

    virtual mitk::MaterialProperty * GetMaterialProperty();
    virtual unsigned int GetShowcaseNumber();

public slots:
    virtual void SetMaterialProperty( mitk::MaterialProperty * property );
    virtual void SetColor( mitk::MaterialProperty::Color color );
    virtual void SetColor( vtkFloatingPointType red, vtkFloatingPointType green, vtkFloatingPointType blue );
    virtual void SetColorCoefficient( vtkFloatingPointType coefficient );
    virtual void SetSpecularColor( mitk::MaterialProperty::Color color );
    virtual void SetSpecularColor( vtkFloatingPointType red, vtkFloatingPointType green, vtkFloatingPointType blue );
    virtual void SetSpecularCoefficient( vtkFloatingPointType specularCoefficient );
    virtual void SetSpecularPower( vtkFloatingPointType specularPower );
    virtual void SetOpacity( vtkFloatingPointType opacity );
    virtual void SetLineWidth( float lineWidth );
    virtual void UpdateRenderWindow();
    virtual void SetRepresentation( mitk::MaterialProperty::RepresentationType representation );
    virtual void SetInterpolation( mitk::MaterialProperty::InterpolationType interpolation );
    virtual void SetShowcaseNumber( unsigned int number );

signals:
    void Selected( QmitkMaterialShowcase* );

protected:
    mitk::Surface::Pointer m_Surface;
    mitk::DataTree::Pointer m_DataTree;
    mitk::DataTreeNode::Pointer m_DataTreeNode;
    mitk::MaterialProperty::Pointer m_MaterialProperty;
    unsigned int m_ShowcaseNumber;
    vtkTextActor* m_TextActor;
    vtkRenderer* m_TextRenderer;

    virtual void mousePressEvent( QMouseEvent * e );
    virtual void showEvent( QShowEvent * e );

protected slots:
  virtual void languageChange() {}

private:
    //void init();
    //void destroy();

};

#endif // QMITKMATERIALSHOWCASE_H
