/**

\page Step10Page MITK Tutorial - Step 10: Adding new Interaction

\tableofcontents



steo 5 usage:

<b>This code demonstrates the use exemplary with the PointSetDataInteractor:</b>

First we need a DataNode that is added to the DataStorage.
\code

  mitk::DataNode::Pointer dataNode = mitk::DataNode::New();
  GetDataStorage()->Add(dataNode.GetPointer());
\endcode

Then we create an instance of to PointSetDataInteractor and load a statemachine pattern as well as a configuration
for it:

\code
  m_CurrentInteractor = mitk::PointSetDataInteractor::New();
  m_CurrentInteractor->LoadStateMachine("PointSet.xml");
  m_CurrentInteractor->AddEventConfig("PointSetConfig.xml");
\endcode

Lastly the DataNode is added to the DataInteractor

\code
  m_CurrentInteractor->SetDataNode(dataNode);
\endcode

now the DataInteractor is ready for usage.
--


This tutorial step goes beyond the activation of an interactor (class/object, that modifies a data by user interaction) as shown in \ref Step05Page and shows what needs to be implemented to add a new way of interaction within your MITK application.
Please see \ref DataInteractionPage as an introduction to the MITK interaction mechanism, you may also want to read \ref DataInteractionTechnicalPage.

This tutorial is structured as follows: The first section deals with config files, describing all the parameters of events and how to use them
in a configuration file. In the second section the basics are described that are needed to write a state machine pattern. The last section
deals with brining configuration, state machine pattern and code together and gives an examplary implementation of a DataInteractor.


\section HowToUseDataInteractor How to use an existing DataInteractor

A DataInteractor consists of four parts. The class describing the functionality and two XML files; one describes the state machine pattern, that is the workflow of an interaction and
the second describes the user events which trigger an action. Lastly every DataInteractor works on a DataNode in which it stores and manipulates data.
To use a DataInteractor these parts have to be brought together.




Have fun with creating your own interaction and please think about a contribution to MITK!

If you meet any difficulties during this step, don't hesitate to ask on the MITK mailing list mitk-users@lists.sourceforge.net! 
People there are kind and will try to help you.


\ref Step09Page "[Previous step]" \ref TutorialPage "[Main tutorial page]"
 
*/
