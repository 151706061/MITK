INCLUDE_DIRECTORIES(${${KITNAME}_INCLUDE_DIRS})
IF(MITK_BUILD_SINGLE_CORE_LIB)
FOREACH(core ${CORE_DIRECTORIES})
  SET(CPP_FILES "")
  INCLUDE(${core}/files.cmake)
  FOREACH(cpp_file ${CPP_FILES})
  SET(ALL_FILES_CPP ${ALL_FILES_CPP} ${core}/${cpp_file})
  ENDFOREACH(cpp_file)
  SET(ALL_FILES_CPP ${ALL_FILES_CPP} ${CPP_FILES_MULTIPLEX})
ENDFOREACH(core)
FIND_PACKAGE(OpenGL)
IF(NOT OPENGL_FOUND)
  MESSAGE("GL is required for MITK rendering")
ENDIF(NOT OPENGL_FOUND )
INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${IPSEGMENTATION_INCLUDE_DIR} ${ANN_INCLUDE_DIR})
OPTION(MITK_BUILD_SHARED_CORE "Build the core lib as shared library." ON)
IF(MITK_BUILD_SHARED_CORE)
IF(NOT MITK_BUILD_SINGLE_CORE_LIB)
MESSAGE(SEND_ERROR "Please turn on MITK_BUILD_SINGLE_CORE_LIB for shared core library!")
ENDIF(NOT MITK_BUILD_SINGLE_CORE_LIB)
IF(CMAKE_COMPILER_IS_GNUCC)
OPTION(MITK_USE_GCC_VISIBILITY "Use gcc's -fvisibility option to hide exported symbols" OFF) 
IF(MITK_USE_GCC_VISIBILITY)
ADD_DEFINITIONS("-fvisibility=hidden")
ENDIF(MITK_USE_GCC_VISIBILITY)
ENDIF(CMAKE_COMPILER_IS_GNUCC)
ADD_LIBRARY(mitkCore${LIBPOSTFIX} SHARED ${ALL_FILES_CPP})

# install only if shared lib (for now)
INSTALL(TARGETS mitkCore${LIBPOSTFIX}
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib/static
)


# install only if shared lib (for now)
INSTALL(TARGETS mitkCore${LIBPOSTFIX}
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib/static
)

ELSE(MITK_BUILD_SHARED_CORE)
ADD_LIBRARY(mitkCore${LIBPOSTFIX} ${ALL_FILES_CPP})
ENDIF(MITK_BUILD_SHARED_CORE)
TARGET_LINK_LIBRARIES(mitkCore${LIBPOSTFIX} ${LIBRARIES_FOR_${KITNAME}_CORE}  ${IPFUNC_LIBRARY} ipSegmentation ann)
TARGET_LINK_LIBRARIES(mitkCore pic2vtk IIL4MITK ${OPENGL_LIBRARIES} )
IF(MSVC_IDE OR MSVC_VERSION)
TARGET_LINK_LIBRARIES(mitkCore psapi.lib)
ENDIF(MSVC_IDE OR MSVC_VERSION)
ELSE(MITK_BUILD_SINGLE_CORE_LIB)
FOREACH(core ${CORE_DIRECTORIES})
ADD_SUBDIRECTORY(${core}) 
ENDFOREACH(core)
ENDIF(MITK_BUILD_SINGLE_CORE_LIB)
